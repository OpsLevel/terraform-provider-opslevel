# https://taskfile.dev/

version: '3'

tasks:

  apply:
    desc: Run "terraform apply"
    cmds:
      - task: terraform-command
        vars: { TF_COMMAND: "apply", TF_CMD_DIR: "{{.TASKFILE_DIR}}" }

  clean:
    desc: Clean up terraform files from "workspace"
    prompt: Remove '*.tfstate .terraform.lock.hcl ./terraform.* .terraform.d/** .terraform/**' from 'workspace' directory?
    cmds:
      - cmd: rm -rf *.tfstate .terraform.lock.hcl ./terraform.* .terraform.d/ .terraform/
        ignore_error: true

  destroy:
    desc: Run "terraform destroy" in "workspace"
    cmds:
      - task: terraform-command
        vars: { TF_COMMAND: "destroy", TF_CMD_DIR: "{{.TASKFILE_DIR}}" }

  init:
    desc: Run "terraform init" in "workspace"
    env:
      OPSLEVEL_TERRAFORM_SOURCE_VERSION: "0.8.7"
    cmds:
      - './make_backend_tf.sh'
      - touch main.tf
      - task: terraform-command
        vars: { TF_COMMAND: "init -upgrade", TF_CMD_DIR: "{{.TASKFILE_DIR}}" }
    preconditions:
      - sh: 'which terraform'
        msg: '"terraform" needed - run "brew install terraform"'

  lint:
    desc: Validate and check format of terraform files in current directory
    cmds:
      - task: validate
      - task: format

  lintfix:
    desc: Format terraform files in current directory
    cmds:
      - task: format-fix

  plan:
    desc: Run "terraform plan" in "workspace"
    cmds:
      - task: terraform-command
        vars: { TF_COMMAND: "plan", TF_CMD_DIR: "{{.TASKFILE_DIR}}" }

  setup:
    desc: Initialize terraform workspace
    cmds:
      - task: install-terraform
      - task: init

  ########################################
  # internal (not directly called) tasks #
  ########################################

  format:
    internal: true
    desc: Run terraform format
    cmds:
      - cmd: echo "Listing all terraform files that need formatting..."
      - task: terraform-command
        vars: { TF_COMMAND: "fmt -recursive -check", TF_CMD_DIR: "{{.USER_WORKING_DIR}}" }

  format-fix:
    internal: true
    desc: Run terraform format
    cmds:
      - task: terraform-command
        vars: { TF_COMMAND: "fmt -recursive -write=true", TF_CMD_DIR: "{{.USER_WORKING_DIR}}" }

  install-terraform:
    internal: true
    aliases: [get]
    cmds:
      - echo "Installing terraform..."
      - task: install-terraform-mac-os
      - echo -e "\nSuccess! 'terraform' installed."

  install-terraform-mac-os:
    internal: true
    platforms: [darwin]
    cmds:
      - brew tap hashicorp/tap
      - brew install hashicorp/tap/terraform
    preconditions:
      - sh: 'which brew'
        msg: '"brew" needed to install terraform - see https://brew.sh'

  terraform-command:
    internal: true
    cmds: ["terraform -chdir={{.TF_CMD_DIR}} {{.TF_COMMAND}} {{.CLI_ARGS}}"]
    requires:
      vars: [TF_COMMAND, TF_CMD_DIR]
    preconditions:
      - sh: 'which terraform'
        msg: '"terraform" needed - run "brew install terraform"'

  validate:
    internal: true
    desc: Run "terraform validate" in current directory
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - task: terraform-command
        vars: { TF_COMMAND: "validate", TF_CMD_DIR: "{{.USER_WORKING_DIR}}" }
